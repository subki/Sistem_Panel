/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.alee.laf.text.WebTextField;
import java.awt.GridLayout;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import koneksi.koneksi;
import net.java.balloontip.BalloonTip;

/**
 *
 * @author ika
 */
public class panelboxform extends javax.swing.JDialog {

    Connection conec;
    public String sisi, h_chasis, d_chasis, w_topi, d_topi, kg_mm, tambahan, persen;
    BalloonTip blbox, blmp, blchasis, bltopi, bldoor, blberat, blact, bldeal;
    public panelboxform(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        this.setTitle("Input Data Box Panel");
        this.setIconImage(new ImageIcon(getClass().getResource("/image/ssm.png")).getImage());
        conec = new koneksi().connection();
        tadeskrip.setLineWrap(true);
        tadeskrip.setWrapStyleWord(true);
        taspek.setLineWrap(true);
        taspek.setWrapStyleWord(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new style.PanelTransparan();
        jLabel1 = new javax.swing.JLabel();
        tfkode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taspek = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tadeskrip = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbunit = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel2 = new style.PanelTransparan();
        jPanel3 = new style.PanelTransparan();
        SIZE = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfheight = new javax.swing.JTextField();
        tfweight = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfdimension = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfplus = new javax.swing.JTextField();
        tfthicknes = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfbrtjenis = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tfmaterial = new javax.swing.JTextField();
        tfcolour = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tflabour = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new style.PanelTransparan();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        tfbox = new javax.swing.JTextField();
        tfmp = new javax.swing.JTextField();
        tfchasis = new javax.swing.JTextField();
        tftopi = new javax.swing.JTextField();
        tfdoor = new javax.swing.JTextField();
        cb_box = new javax.swing.JCheckBox();
        cb_mp = new javax.swing.JCheckBox();
        cb_chasis = new javax.swing.JCheckBox();
        cb_topi = new javax.swing.JCheckBox();
        cb_door = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        tfberat = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        tfaktual = new javax.swing.JTextField();
        tfjual = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Title Box"));

        jLabel1.setText("Kode Produk");

        jLabel2.setText("Spesifikasi");

        taspek.setColumns(20);
        taspek.setRows(5);
        jScrollPane1.setViewportView(taspek);

        tadeskrip.setColumns(20);
        tadeskrip.setRows(5);
        jScrollPane2.setViewportView(tadeskrip);

        jLabel3.setText("Deskripsi");

        jLabel4.setText("Satuan");

        cbunit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ".:: Pilih Unit ::.", "Pcs", "Box", "Set", "Kg", "Meter" }));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Action"));

        btnSubmit.setText("jButton2");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSubmit)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfkode, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbunit, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfkode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbunit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Box"));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Main"));

        SIZE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SIZE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SIZE.setText("SIZE");

        jLabel5.setText("Height");

        tfheight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfheightKeyTyped(evt);
            }
        });

        tfweight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfweightKeyTyped(evt);
            }
        });

        jLabel6.setText("Weight");

        tfdimension.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfdimensionKeyTyped(evt);
            }
        });

        jLabel7.setText("Dimension");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("ADDITIONAL");

        jLabel9.setText("Plus");

        tfplus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfplusKeyTyped(evt);
            }
        });

        tfthicknes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfthicknesKeyTyped(evt);
            }
        });

        jLabel10.setText("Thickness");

        tfbrtjenis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfbrtjenisKeyTyped(evt);
            }
        });

        jLabel11.setText("Berat Jenis");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("SUPPORT FEE / KG");

        jLabel13.setText("Material");

        tfmaterial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfmaterialKeyTyped(evt);
            }
        });

        tfcolour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfcolourKeyTyped(evt);
            }
        });

        jLabel14.setText("Colour");

        tflabour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tflabourKeyTyped(evt);
            }
        });

        jLabel15.setText("Labour");

        jButton1.setText("Proses");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addComponent(SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfheight, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfweight, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(tfdimension, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfplus, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfthicknes, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(tfbrtjenis, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfmaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfcolour, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(tflabour, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfheight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfweight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdimension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfplus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfthicknes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfbrtjenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfmaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfcolour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tflabour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Sub main"));

        jLabel16.setText("Luas Box");

        jLabel17.setText("Luas MP");

        jLabel18.setText("Luas Chasis");

        jLabel19.setText("Luas Topi");

        jLabel20.setText("Luas Door");

        jLabel21.setText("Rp.");

        jLabel22.setText("Rp.");

        jLabel23.setText("Rp.");

        jLabel24.setText("Rp.");

        jLabel25.setText("Rp.");

        tfbox.setEnabled(false);
        tfbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfboxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfboxMouseExited(evt);
            }
        });

        tfmp.setEnabled(false);
        tfmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfmpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfmpMouseExited(evt);
            }
        });

        tfchasis.setEnabled(false);
        tfchasis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfchasisMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfchasisMouseExited(evt);
            }
        });

        tftopi.setEnabled(false);
        tftopi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tftopiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tftopiMouseExited(evt);
            }
        });

        tfdoor.setEnabled(false);
        tfdoor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfdoorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfdoorMouseExited(evt);
            }
        });

        cb_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_boxActionPerformed(evt);
            }
        });

        cb_mp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mpActionPerformed(evt);
            }
        });

        cb_chasis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_chasisActionPerformed(evt);
            }
        });

        cb_topi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_topiActionPerformed(evt);
            }
        });

        cb_door.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_doorActionPerformed(evt);
            }
        });

        jLabel26.setText("Berat");

        jLabel27.setText("Rp.");

        tfberat.setEnabled(false);
        tfberat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfberatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfberatMouseExited(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Price / Unit");

        jLabel29.setText("Harga Aktual");

        tfaktual.setEnabled(false);
        tfaktual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfaktualMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfaktualMouseExited(evt);
            }
        });

        tfjual.setEnabled(false);
        tfjual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfjualMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfjualMouseExited(evt);
            }
        });

        jLabel30.setText("Harga Jual");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator5)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(tfaktual, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfjual, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfdoor))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tftopi))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfchasis))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfmp))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfbox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_box)
                                    .addComponent(cb_mp)
                                    .addComponent(cb_chasis)
                                    .addComponent(cb_topi)
                                    .addComponent(cb_door)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel30))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addGap(62, 62, 62)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfberat, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel21)
                        .addComponent(tfbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_box))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(jLabel22)
                        .addComponent(tfmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_mp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(jLabel23)
                        .addComponent(tfchasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_chasis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(jLabel24)
                        .addComponent(tftopi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_topi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel25)
                        .addComponent(tfdoor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_door))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(tfberat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfaktual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfjual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfheightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfheightKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfheightKeyTyped

    private void tfweightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfweightKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfweightKeyTyped

    private void tfdimensionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdimensionKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfdimensionKeyTyped

    private void tfplusKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfplusKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfplusKeyTyped

    private void tfthicknesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfthicknesKeyTyped
        //char c = evt.getKeyChar();
        //if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
        //    evt.consume();
        //}
    }//GEN-LAST:event_tfthicknesKeyTyped

    private void tfbrtjenisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfbrtjenisKeyTyped
//        char c = evt.getKeyChar();
//        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
//            evt.consume();
//        }
    }//GEN-LAST:event_tfbrtjenisKeyTyped

    private void tfmaterialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfmaterialKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfmaterialKeyTyped

    private void tfcolourKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfcolourKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfcolourKeyTyped

    private void tflabourKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tflabourKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tflabourKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        prosesHitung();
        falseddetail();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cb_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_boxActionPerformed
        //if(cb_box.isSelected()){
            hitung_luas();
        //}else{
        //    tfbox.setText("0");
        //}
    }//GEN-LAST:event_cb_boxActionPerformed

    private void cb_mpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mpActionPerformed
        //if(cb_mp.isSelected()){
            hitung_luas();
        //}else{
        //    tfmp.setText("0");
        //}
    }//GEN-LAST:event_cb_mpActionPerformed

    private void cb_chasisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_chasisActionPerformed
        //if(cb_chasis.isSelected()){
            hitung_luas();
        //}else{
        //    tfchasis.setText("0");
        //}
    }//GEN-LAST:event_cb_chasisActionPerformed

    private void cb_topiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_topiActionPerformed
        //if(cb_topi.isSelected()){
            hitung_luas();
        //}else{
        //    tftopi.setText("0");
        //}
    }//GEN-LAST:event_cb_topiActionPerformed

    private void cb_doorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_doorActionPerformed
        //if(cb_door.isSelected()){
            hitung_luas();
        //}else{
        //    tfdoor.setText("0");
        //}
    }//GEN-LAST:event_cb_doorActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if(btnSubmit.getText().equals("Save")){
            save();
        }
        
        if(btnSubmit.getText().equals("Update")){
            update();
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tfboxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfboxMouseEntered
        blbox = new BalloonTip(tfbox, "(Height+("+sisi+"*Dimension)+("+sisi+"*Plus))*(Weight+("+sisi+"*Dimension)+("+sisi+"*Plus))");
    }//GEN-LAST:event_tfboxMouseEntered

    private void tfboxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfboxMouseExited
        blbox.setVisible(false);
    }//GEN-LAST:event_tfboxMouseExited

    private void tfmpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfmpMouseEntered
        blmp = new BalloonTip(tfmp, "(Weight+("+sisi+"*Plus))*(Height+("+sisi+"*Plus))");
    }//GEN-LAST:event_tfmpMouseEntered

    private void tfmpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfmpMouseExited
        blmp.setVisible(false);
    }//GEN-LAST:event_tfmpMouseExited

    private void tfchasisMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfchasisMouseEntered
        blchasis = new BalloonTip(tfchasis, 
                "((Weight*"+sisi+")+(Dimensio*"+sisi+"))*("+h_chasis+"+"+d_chasis+"+"+d_chasis+")");
    }//GEN-LAST:event_tfchasisMouseEntered

    private void tfchasisMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfchasisMouseExited
        blchasis.setVisible(false);
    }//GEN-LAST:event_tfchasisMouseExited

    private void tftopiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tftopiMouseEntered
        bltopi = new BalloonTip(tftopi, 
                "(Weight+("+sisi+"*"+w_topi+"))*(Dimension+("+w_topi+"+"+d_topi+"))");
    }//GEN-LAST:event_tftopiMouseEntered

    private void tftopiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tftopiMouseExited
        bltopi.setVisible(false);
    }//GEN-LAST:event_tftopiMouseExited

    private void tfdoorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfdoorMouseEntered
        bldoor = new BalloonTip(tfdoor, "(Weight+("+sisi+"*Plus))*(Height+("+sisi+"*Plus))");
    }//GEN-LAST:event_tfdoorMouseEntered

    private void tfdoorMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfdoorMouseExited
        bldoor.setVisible(false);
    }//GEN-LAST:event_tfdoorMouseExited

    private void tfberatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfberatMouseEntered
        blberat = new BalloonTip(tfberat, "((Total Luas)*Thickness*Berat Jenis)/"+kg_mm+")");
    }//GEN-LAST:event_tfberatMouseEntered

    private void tfberatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfberatMouseExited
        blberat.setVisible(false);
    }//GEN-LAST:event_tfberatMouseExited

    private void tfaktualMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfaktualMouseEntered
        blact = new BalloonTip(tfaktual, "Berat*(Material+Colour+Labour)+"+tambahan);
    }//GEN-LAST:event_tfaktualMouseEntered

    private void tfaktualMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfaktualMouseExited
        blact.setVisible(false);
    }//GEN-LAST:event_tfaktualMouseExited

    private void tfjualMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfjualMouseEntered
        bldeal = new BalloonTip(tfjual, "Harga Aktual * "+persen+"%");
    }//GEN-LAST:event_tfjualMouseEntered

    private void tfjualMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfjualMouseExited
        bldeal.setVisible(false);
    }//GEN-LAST:event_tfjualMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panelboxform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panelboxform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panelboxform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panelboxform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                panelboxform dialog = new panelboxform(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SIZE;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JCheckBox cb_box;
    private javax.swing.JCheckBox cb_chasis;
    private javax.swing.JCheckBox cb_door;
    private javax.swing.JCheckBox cb_mp;
    private javax.swing.JCheckBox cb_topi;
    private javax.swing.JComboBox cbunit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextArea tadeskrip;
    private javax.swing.JTextArea taspek;
    private javax.swing.JTextField tfaktual;
    private javax.swing.JTextField tfberat;
    private javax.swing.JTextField tfbox;
    private javax.swing.JTextField tfbrtjenis;
    private javax.swing.JTextField tfchasis;
    private javax.swing.JTextField tfcolour;
    private javax.swing.JTextField tfdimension;
    private javax.swing.JTextField tfdoor;
    private javax.swing.JTextField tfheight;
    private javax.swing.JTextField tfjual;
    private javax.swing.JTextField tfkode;
    private javax.swing.JTextField tflabour;
    private javax.swing.JTextField tfmaterial;
    private javax.swing.JTextField tfmp;
    private javax.swing.JTextField tfplus;
    private javax.swing.JTextField tfthicknes;
    private javax.swing.JTextField tftopi;
    private javax.swing.JTextField tfweight;
    // End of variables declaration//GEN-END:variables

    public JTextField getTfaktual() {
        return tfaktual;
    }

    public JTextField getTfdoor() {
        return tfdoor;
    }

    public JTextField getTfheight() {
        return tfheight;
    }

    public JTextField getTfjual() {
        return tfjual;
    }

    public JTextField getTfkode() {
        return tfkode;
    }

    public JTextField getTflabour() {
        return tflabour;
    }

    public JTextField getTfmaterial() {
        return tfmaterial;
    }

    public JTextField getTfmp() {
        return tfmp;
    }

    public JTextField getTfplus() {
        return tfplus;
    }

    public JTextField getTfthicknes() {
        return tfthicknes;
    }

    public JTextField getTftopi() {
        return tftopi;
    }

    public JTextField getTfweight() {
        return tfweight;
    }

    public JTextArea getTadeskrip() {
        return tadeskrip;
    }

    public JTextArea getTaspek() {
        return taspek;
    }
 
    public JTextField getTfdimension() {
        return tfdimension;
    }

    public JTextField getTfcolour() {
        return tfcolour;
    }

    public JTextField getTfchasis() {
        return tfchasis;
    }

    public JTextField getTfbrtjenis() {
        return tfbrtjenis;
    }

    public JTextField getTfbox() {
        return tfbox;
    }

    public JTextField getTfberat() {
        return tfberat;
    }

    public JButton getBtnCancel() {
        return btnCancel;
    }

    public JButton getBtnSubmit() {
        return btnSubmit;
    }

    public void reset(){
        tfkode.setText("");
        taspek.setText("");
        tadeskrip.setText("");
        cbunit.setSelectedIndex(0);
        tfheight.setText("");
        tfweight.setText("");
        tfdimension.setText("");
        tfplus.setText("");
        tfthicknes.setText("");
        tfbrtjenis.setText("");
        tfmaterial.setText("");
        tfcolour.setText("");
        tflabour.setText("");
        tfbox.setText("0");
        tfmp.setText("0");
        tfchasis.setText("0");
        tftopi.setText("0");
        tfdoor.setText("0");
        tfberat.setText("0");
        tfaktual.setText("0");
        tfjual.setText("0");
    }
    private void prosesHitung() {
        
        //if(!tfkode.getText().equals("")){
           
            final WebTextField v1  = new com.alee.laf.text.WebTextField(10);
            final WebTextField v2 = new com.alee.laf.text.WebTextField(10);
            final WebTextField v3 = new com.alee.laf.text.WebTextField(10);
            final WebTextField v4 = new com.alee.laf.text.WebTextField(10);
            final WebTextField v5 = new com.alee.laf.text.WebTextField(10);
            final WebTextField v6 = new com.alee.laf.text.WebTextField(10);
            final WebTextField v7 = new com.alee.laf.text.WebTextField(10);
            final WebTextField v8 = new com.alee.laf.text.WebTextField(10);
            
            v1.setFont(new java.awt.Font("Tahoma", 0, 12));
            v2.setFont(new java.awt.Font("Tahoma", 0, 12));
            v3.setFont(new java.awt.Font("Tahoma", 0, 12));
            v4.setFont(new java.awt.Font("Tahoma", 0, 12));
            v5.setFont(new java.awt.Font("Tahoma", 0, 12));
            v6.setFont(new java.awt.Font("Tahoma", 0, 12));
            v7.setFont(new java.awt.Font("Tahoma", 0, 12));
            v8.setFont(new java.awt.Font("Tahoma", 0, 12));
            
            v1.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    sisi = v1.getText();
                }
            });
            
            v2.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    h_chasis = v2.getText();
                }
            });
            
            v3.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    d_chasis = v3.getText();
                }
            });
            
            v4.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    w_topi = v4.getText();
                }
            });
            
            v5.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    d_topi = v5.getText();
                }
            });
            
            v6.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    kg_mm = v6.getText();
                }
            });
            
            v7.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    tambahan = v7.getText();
                }
            });
            
            v8.addKeyListener(new KeyListener() {

                @Override
                public void keyTyped(KeyEvent e) {
                    char c = e.getKeyChar();
                    if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
                        e.consume();
                    }
                }

                @Override
                public void keyPressed(KeyEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet.");
                }

                @Override
                public void keyReleased(KeyEvent e) {
                    persen = v8.getText();
                }
            });
            
            v1.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v1.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v1.setText(sisi);
                }
            });
            
            v2.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v2.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v2.setText(h_chasis);
                }
            });
            
            v3.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v3.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v3.setText(d_chasis);
                }
            });
            
            v4.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v4.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v4.setText(w_topi);
                }
            });
            
            v5.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v5.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v5.setText(d_topi);
                }
            });
            
            v6.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v6.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v6.setText(kg_mm);
                }
            });
            
            v7.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v7.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v7.setText(tambahan);
                }
            });
            
            v8.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                    v8.setText("");
                }

                @Override
                public void focusLost(FocusEvent e) {
                    v8.setText(persen);
                }
            });
            
            //Input Jumlah Sisi Box
            JPanel myPanel = new JPanel(new GridLayout(0, 1));
            myPanel.add(new JLabel("Default : 2"));
            v1.setText("2");
            myPanel.add(v1);
            int result = JOptionPane.showConfirmDialog(null, myPanel, 
                "Masukan Jumlah Sisi Box Panel", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                sisi = v1.getText();
                v1.setText("");
                System.out.println(sisi);
            }
            
            //Chasis
            JPanel cs = new JPanel(new GridLayout(0, 2));
            cs.add(new JLabel("Default H Chasis : 80"));
            cs.add(Box.createHorizontalStrut(20));
            cs.add(new JLabel("Default D Chasis : 40"));
            cs.add(Box.createHorizontalStrut(20));
            cs.add(new JLabel("Height Chasis"));
            v2.setText("80");
            cs.add(v2);
            cs.add(new JLabel("Dimension Chasis"));
            v3.setText("40");
            cs.add(v3);
            
            int ok = JOptionPane.showConfirmDialog(null, cs,
                    "Input Penambahan Chasis", JOptionPane.OK_CANCEL_OPTION);
            if(ok == JOptionPane.OK_OPTION){
                h_chasis = v2.getText();
                d_chasis = v3.getText();
                v2.setText("");
                v3.setText("");
                System.out.println(h_chasis);
                System.out.println(d_chasis);
            }
            
            //Topi
            JPanel ty = new JPanel(new GridLayout(0, 2));
            ty.add(new JLabel("Default W Topi : 180"));
            ty.add(Box.createHorizontalStrut(20));
            ty.add(new JLabel("Default D Topi : 80"));
            ty.add(Box.createHorizontalStrut(20));
            ty.add(new JLabel("Height Chasis"));
            v4.setText("180");
            ty.add(v4);
            ty.add(new JLabel("Dimension Chasis"));
            v5.setText("80");
            ty.add(v5);
            
            int yes = JOptionPane.showConfirmDialog(null, ty,
                    "Input Penambahan Topi", JOptionPane.OK_CANCEL_OPTION);
            if(yes == JOptionPane.OK_OPTION){
                w_topi = v4.getText();
                d_topi = v5.getText();
                v4.setText("");
                v5.setText("");
                System.out.println(w_topi);
                System.out.println(d_topi);
            }
            
            //konversi mm ke kg
            JPanel as = new JPanel(new GridLayout(0, 2));
            as.add(new JLabel("Default : 1000000"));
            as.add(Box.createHorizontalStrut(20));
            as.add(new JLabel("mm to kg"));
            v6.setText("1000000");
            as.add(v6);
            
            int x = JOptionPane.showConfirmDialog(null, as,
                    "Input Konversi satuan mm ke kg", JOptionPane.OK_CANCEL_OPTION);
            if(x == JOptionPane.OK_OPTION){
                kg_mm = v6.getText();
                v6.setText("");
                System.out.println(kg_mm);
            }
            
            //Biaya tambahan
            JPanel qw = new JPanel(new GridLayout(0, 2));
            qw.add(new JLabel("Default : 100000"));
            qw.add(Box.createHorizontalStrut(20));
            qw.add(new JLabel("Biaya tambahan"));
            v7.setText("100000");
            qw.add(v7);
            
            int y = JOptionPane.showConfirmDialog(null, qw,
                    "Input Biaya tambahan", JOptionPane.OK_CANCEL_OPTION);
            if(x == JOptionPane.OK_OPTION){
                tambahan = v7.getText();
                v7.setText("");
                System.out.println(tambahan);
            }
            
            //Persentase up harga jual
            JPanel aqs = new JPanel(new GridLayout(0, 2));
            aqs.add(new JLabel("Default : 45% "));
            aqs.add(Box.createHorizontalStrut(20));
            aqs.add(new JLabel("Upping harga Aktual"));
            v8.setText("45");
            aqs.add(v8);
            
            int z = JOptionPane.showConfirmDialog(null, aqs,
                    "Input Konversi satuan mm ke kg", JOptionPane.OK_CANCEL_OPTION);
            if(z == JOptionPane.OK_OPTION){
                persen = v8.getText();
                v8.setText("");
                System.out.println(persen);
            }
        //}
        JOptionPane.showMessageDialog(null, "Ini hasilnya : \n"
                + "sisi : "+sisi+"\n"
                + "height chasis : "+h_chasis+"\n"
                + "dimensi chasis : "+d_chasis+"\n"
                + "weight topi : "+w_topi+"\n"
                + "dimensi topi : "+d_topi+"\n"
                + "konversi : "+kg_mm+"\n"
                + "Biaya tambahan : "+tambahan+"\n"
                + "Upping : "+persen);
        hitung_luas();
    }

    private void hitung_luas() {
        if(sisi==null || h_chasis==null || d_chasis==null || w_topi==null || d_topi==null || kg_mm==null || tambahan==null || persen==null){
            int selectedOption = JOptionPane.showConfirmDialog(null, 
                                  "Data belum bisa di proses, Klik OK", 
                                  "Hapus Data", 
                                  JOptionPane.YES_NO_OPTION); 
            if (selectedOption == JOptionPane.YES_OPTION) { 
                prosesHitung();
                falseddetail();
            } 
        }
        tfberat.setText("0");
        tfaktual.setText("0");
        tfjual.setText("0");
        double vsisi = Double.valueOf(sisi);
        double vh_chasis = Double.valueOf(h_chasis);
        double vd_chasis = Double.valueOf(d_chasis);
        double vw_topi = Double.valueOf(w_topi);
        double vd_topi = Double.valueOf(d_topi);
        double vkonversi = Double.valueOf(kg_mm);
        double vtambahan = Double.valueOf(tambahan);
        double vupping = Double.valueOf(persen)/100;
        
        double height = Double.valueOf(tfheight.getText());
        double weight = Double.valueOf(tfweight.getText());
        double dimen = Double.valueOf(tfdimension.getText());
        double plus = Double.valueOf(tfplus.getText());
        double thickness = Double.valueOf(tfthicknes.getText());
        double brtJns = Double.valueOf(tfbrtjenis.getText());
        double material = Double.valueOf(tfmaterial.getText());
        double colour = Double.valueOf(tfcolour.getText());
        double labour = Double.valueOf(tflabour.getText());
        
//        cb_box.setSelected(true);
//        cb_mp.setSelected(true);
//        cb_chasis.setSelected(true);
//        cb_topi.setSelected(true);
//        cb_door.setSelected(true);
        
        //luas box
        double l_box = Math.round((weight+(vsisi*dimen)+(vsisi*plus))*(height+(vsisi*dimen)+(vsisi*plus)));
        int luas_box = (int) l_box;
        
        //luas mp
        double l_mp = Math.round((weight+(vsisi*plus))*(height+(vsisi*plus)));
        int luas_mp = (int) l_mp;
        
        //luas chasis
        double l_chasis = Math.round((((weight*vsisi)*(dimen*vsisi))*(vh_chasis+vd_chasis+vd_chasis)));
        int luas_chasis = (int) l_chasis;
        
        //luas topi
        double l_topi = Math.round((weight+(vsisi*vw_topi))*(dimen+(vw_topi+vd_topi)));
        int luas_topi = (int)l_topi;
        
        //luas door
        double l_door = Math.round((weight+(vsisi*plus))*(height+(vsisi*plus)));
        int luas_door = (int)l_door;
        
        if(cb_box.isSelected()){
            tfbox.setText(String.valueOf(luas_box));
        }else{
            luas_box=0;
            tfbox.setText(String.valueOf(luas_box));
        }
        
        if(cb_mp.isSelected()){
            tfmp.setText(String.valueOf(luas_mp));
        }else{
            luas_mp=0;
            tfmp.setText(String.valueOf(luas_mp));
        }
        
        if(cb_chasis.isSelected()){
            tfchasis.setText(String.valueOf(luas_chasis));
        }else{
            luas_chasis=0;
            tfchasis.setText(String.valueOf(luas_chasis));
        }
        
        if(cb_topi.isSelected()){
            tftopi.setText(String.valueOf(luas_topi));
        }else{
            luas_topi=0;
            tftopi.setText(String.valueOf(luas_topi));
        }
        
        if(cb_door.isSelected()){
            tfdoor.setText(String.valueOf(luas_door));
        }else{
            luas_door=0;
            tfdoor.setText(String.valueOf(luas_door));
        }
        
        double berat_kg = ((luas_box+luas_mp+luas_chasis+luas_topi+luas_door)*thickness*brtJns)/vkonversi;

        tfberat.setText(String.valueOf(berat_kg));
            if(!tfberat.getText().equals("0.0")){
            //actual
            double actual = Math.round(berat_kg*(material+colour+labour)+vtambahan);
            int akt = (int) actual;
            tfaktual.setText(String.valueOf(akt));

            //jual
            double deal = Math.round(actual / (vupping));
            int de = (int) deal;
            tfjual.setText(String.valueOf(de));
        }
    }

    private void falseddetail() {
        tfheight.setEnabled(false);
        tfweight.setEnabled(false);
        tfdimension.setEnabled(false);
        tfplus.setEnabled(false);
        tfthicknes.setEnabled(false);
        tfbrtjenis.setEnabled(false);
        tfmaterial.setEnabled(false);
        tfcolour.setEnabled(false);
        tflabour.setEnabled(false);
    }

    public void cari(String no) {
        String sql = "select * from product_box where product_no=?";
        PreparedStatement ps;
        try {
            ps = conec.prepareStatement(sql);
            ps.setString(1, no);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                tfkode.setText(rs.getString("product_no"));
                taspek.setText(rs.getString("specification"));
                tadeskrip.setText(rs.getString("description"));
                cbunit.setSelectedItem(rs.getString("unit"));
                tfheight.setText(rs.getString("height"));
                tfweight.setText(rs.getString("weight"));
                tfdimension.setText(rs.getString("dimension"));
                tfplus.setText(rs.getString("plus"));
                tfthicknes.setText(rs.getString("thickness"));
                tfbrtjenis.setText(rs.getString("berat_jenis"));
                tfmaterial.setText(rs.getString("price_material"));
                tfcolour.setText(rs.getString("price_colour"));
                tflabour.setText(rs.getString("price_labour"));
                //tfbox.setText(rs.getString("luas_box"));
                //tfmp.setText(rs.getString("luas_mp"));
                //tfchasis.setText(rs.getString("luas_chasis"));
                //tftopi.setText(rs.getString("luas_topi"));
                //tfdoor.setText(rs.getString("luas_door"));
                //tfberat.setText(rs.getString("luas_berat"));
                //tfaktual.setText(rs.getString("act_price"));
                //tfjual.setText(rs.getString("deal_price"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void save() {
        String kode = tfkode.getText();
        String spek = taspek.getText();
        String desk = tadeskrip.getText();
        String unit = (String)cbunit.getSelectedItem().toString();
        String vh = tfheight.getText();
        String vw = tfweight.getText();
        String vd = tfdimension.getText();
        String vplus = tfplus.getText();
        String vthic = tfthicknes.getText();
        String vjns = tfbrtjenis.getText();
        String vmat = tfmaterial.getText();
        String vcol = tfcolour.getText();
        String vlab = tflabour.getText();
        String vbox = tfbox.getText();
        String vmp = tfmp.getText();
        String vchas = tfchasis.getText();
        String vtopi = tftopi.getText();
        String vdoor = tfdoor.getText();
        String vberat = tfberat.getText();
        String vaktual= tfaktual.getText();
        String vjual= tfjual.getText();
        //String vqty = tfjumlah.getText();
        if(!kode.equals("")){// || !vqty.equals("")){
            String sql_cek = "select * from product_box where product_no=?";
            try {
                PreparedStatement st = conec.prepareStatement(sql_cek);
                st.setString(1, kode);
                ResultSet rs = st.executeQuery();
                if(rs.next()){
                    int a = JOptionPane.showConfirmDialog(null,
                            "Data dengan kode : "+kode+"-"+spek+" Sudah ada \n update data?",
                            "Double data",
                            JOptionPane.YES_NO_OPTION);
                    if(a == JOptionPane.YES_OPTION){
                        update();
                    }
                }else{
                    String sql = "insert into product_box "
                        + " ( product_no, "
                             + "description, "
                             + "specification, "
                             + "unit, "
                             + "height, "
                             + "weight, "
                             + "dimension, "
                             + "plus, "
                             + "thickness, "
                             + "berat_jenis, "
                             + "luas_box, "
                             + "luas_mp,"
                             + "luas_chasis,"
                             + "luas_topi, "
                             + "luas_door, "
                             + "luas_berat, "
                             + "price_material, "
                             + "price_colour, "
                             + "price_labour, "
                             + "act_price, "
                             + "deal_price"
                            // + "qty"
                         + ") values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                     try {
                         PreparedStatement ps = conec.prepareStatement(sql);
                         ps.setString(1, kode);
                         ps.setString(2, desk);
                         ps.setString(3, spek);
                         ps.setString(4, unit);
                         ps.setString(5, vh);
                         ps.setString(6, vw);
                         ps.setString(7, vd);
                         ps.setString(8, vplus);
                         ps.setString(9, vthic);
                         ps.setString(10, vjns);
                         ps.setString(11, vbox);
                         ps.setString(12, vmp);
                         ps.setString(13, vchas);
                         ps.setString(14, vtopi);
                         ps.setString(15, vdoor);
                         ps.setString(16, vberat);
                         ps.setString(17, vmat);
                         ps.setString(18, vcol);
                         ps.setString(19, vlab);
                         ps.setString(20, vaktual);
                         ps.setString(21, vjual);
                         //ps.setString(22, vqty);
                         ps.executeUpdate();

                         save_detail();
                         JOptionPane.showMessageDialog(null, "Data berhasil di tambahkan");
                         this.dispose();
                     } catch (SQLException ex) {
                         Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
                     }
                }
            } catch (SQLException ex) {
                Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Kode Product tidak boleh kosong");
        }
    }
    
    public void update(){
        String kode = tfkode.getText();
        String spek = taspek.getText();
        String desk = tadeskrip.getText();
        String unit = (String)cbunit.getSelectedItem().toString();
        String vh = tfheight.getText();
        String vw = tfweight.getText();
        String vd = tfdimension.getText();
        String vplus = tfplus.getText();
        String vthic = tfthicknes.getText();
        String vjns = tfbrtjenis.getText();
        String vmat = tfmaterial.getText();
        String vcol = tfcolour.getText();
        String vlab = tflabour.getText();
        String vbox = tfbox.getText();
        String vmp = tfmp.getText();
        String vchas = tfchasis.getText();
        String vtopi = tftopi.getText();
        String vdoor = tfdoor.getText();
        String vberat = tfberat.getText();
        String vaktual= tfaktual.getText();
        String vjual= tfjual.getText();
       // String vqty = tfjumlah.getText();
        
        if(!kode.equals("")){
            String sql_cek = "select * from product_box where product_no=?";
            try {
                PreparedStatement st = conec.prepareStatement(sql_cek);
                st.setString(1, kode);
                ResultSet rs = st.executeQuery();
                if(rs.next()){
                    String sql = "update product_box set "
                             + "description = ?, "
                             + "specification = ?, "
                             + "unit = ?, "
                             + "height = ?, "
                             + "weight = ?, "
                             + "dimension = ?, "
                             + "plus = ?, "
                             + "thickness = ?, "
                             + "berat_jenis = ?, "
                             + "luas_box = ?, "
                             + "luas_mp = ?, "
                             + "luas_chasis = ?, "
                             + "luas_topi = ?, "
                             + "luas_door = ?, "
                             + "luas_berat = ?, "
                             + "price_material = ?, "
                             + "price_colour = ?, "
                             + "price_labour = ?, "
                             + "act_price = ?, "
                             + "deal_price = ? "
                             //+ "qty = ? "
                             + "where product_no=?";
                     try {
                         PreparedStatement ps = conec.prepareStatement(sql);
                         ps.setString(1, desk);
                         ps.setString(2, spek);
                         ps.setString(3, unit);
                         ps.setString(4, vh);
                         ps.setString(5, vw);
                         ps.setString(6, vd);
                         ps.setString(7, vplus);
                         ps.setString(8, vthic);
                         ps.setString(9, vjns);
                         ps.setString(10, vbox);
                         ps.setString(11, vmp);
                         ps.setString(12, vchas);
                         ps.setString(13, vtopi);
                         ps.setString(14, vdoor);
                         ps.setString(15, vberat);
                         ps.setString(16, vmat);
                         ps.setString(17, vcol);
                         ps.setString(18, vlab);
                         ps.setString(19, vaktual);
                         ps.setString(20, vjual);
                         ps.setString(21, kode);
                         //ps.setString(22, kode);
                         ps.executeUpdate();

                         save_detail();
                         JOptionPane.showMessageDialog(null, "Data berhasil di tambahkan");
                         this.dispose();
                     } catch (SQLException ex) {
                         Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
                     }
                }else{
                    int a = JOptionPane.showConfirmDialog(null,
                            "Data dengan kode : "+kode+"-"+spek+" Belum ada \n tambah data?",
                            "Unknown data",
                            JOptionPane.YES_NO_OPTION);
                    if(a == JOptionPane.YES_OPTION){
                        save();
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Kode Product tidak boleh kosong");
        }
    }

    private void save_detail() {
        String sql_cek = "select * from product_box_detail where product_no=?";
        try {
            PreparedStatement st = conec.prepareStatement(sql_cek);
            st.setString(1, tfkode.getText());
            ResultSet rs = st.executeQuery();
            if(rs.next()){
                String q = "update product_box_detail set "
                        + "sisi = ?, "
                        + "height_chasis = ?, "
                        + "dimension_chasis = ?, "
                        + "weihgt_topi = ?, "
                        + "dimension_topi = ?, "
                        + "konversi = ?, "
                        + "add_fee = ?, "
                        + "upping = ? "
                        + "where product_no=?";
                PreparedStatement pq = conec.prepareStatement(q);
                pq.setString(1, sisi);
                pq.setString(2, h_chasis);
                pq.setString(3, d_chasis);
                pq.setString(4, w_topi);
                pq.setString(5, d_topi);
                pq.setString(6, kg_mm);
                pq.setString(7, tambahan);
                pq.setString(8, persen);
                pq.setString(9, tfkode.getText());
                pq.executeUpdate();
                
                System.out.println("sukses update detail box");
            }else{
                String sql = "insert into product_box_detail ("
                    + "product_no, "
                    + "sisi, "
                    + "height_chasis, "
                    + "dimension_chasis, "
                    + "weight_topi, "
                    + "dimension_topi, "
                    + "konversi, "
                    + "add_fee, "
                    + "upping) "
                    + "values(?,?,?,?,?,?,?,?,?)";
                try {
                    PreparedStatement ps = conec.prepareStatement(sql);
                    ps.setString(1, tfkode.getText());
                    ps.setString(2, sisi);
                    ps.setString(3, h_chasis);
                    ps.setString(4, d_chasis);
                    ps.setString(5, w_topi);
                    ps.setString(6, d_topi);
                    ps.setString(7, kg_mm);
                    ps.setString(8, tambahan);
                    ps.setString(9, persen);
                    ps.executeUpdate();
                    
                    System.out.println("sukses simpan detail box");
                } catch (SQLException ex) {
                    Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelboxform.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
}
