/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.alee.laf.text.WebTextField;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.Arrays;
import java.util.EventObject;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import koneksi.koneksi;

/**
 *
 * @author subki
 */
public class panelcomponentform extends javax.swing.JDialog {

    Connection conec;
    public panelcomponentform(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setLocationRelativeTo(this);
        this.setIconImage(new ImageIcon(getClass().getResource("/image/ssm.png")).getImage());
        this.setTitle("Panel Komponen");
        
        conec = new koneksi().connection();
        
        createtable();
        auto_refresh();
        
        lbltotAktual.setText("0");
        lbltotJual.setText("0");
        tadeskrip.setLineWrap(true);
        tadeskrip.setWrapStyleWord(true);
        
        jButton1.setIcon(new ImageIcon(getClass().getResource("/image/search110.png")));
        btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/zoomin.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new style.PanelTransparan();
        jLabel1 = new javax.swing.JLabel();
        tfnomor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tadeskrip = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbltotAktual = new javax.swing.JLabel();
        lbltotJual = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new style.PanelTransparan();
        jLabel3 = new javax.swing.JLabel();
        tfkode = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        tfnama = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfaktual = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfjual = new javax.swing.JTextField();
        tfqty = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataTabelD = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Header"));

        jLabel1.setText("Product No");

        jLabel2.setText("Description");

        tadeskrip.setColumns(20);
        tadeskrip.setRows(5);
        jScrollPane1.setViewportView(tadeskrip);

        jLabel9.setText("Total Harga A/J");

        jLabel10.setText("Rp.");

        lbltotAktual.setText("0");

        lbltotJual.setText("0");

        jLabel13.setText("Rp.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfnomor, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltotAktual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltotJual)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfnomor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(lbltotAktual)
                    .addComponent(lbltotJual)
                    .addComponent(jLabel13))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail"));

        jLabel3.setText("Material ID");

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tfnama.setEnabled(false);

        jLabel4.setText("Rp.");

        tfaktual.setEnabled(false);
        tfaktual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfaktualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfaktualKeyTyped(evt);
            }
        });

        jLabel5.setText("Harga Aktual");

        jLabel6.setText("Harga Jual");

        jLabel7.setText("Rp.");

        tfjual.setEnabled(false);
        tfjual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfjualKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfjualKeyTyped(evt);
            }
        });

        tfqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfqtyKeyTyped(evt);
            }
        });

        jLabel8.setText("Qty");

        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tfkode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfqty, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfaktual))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfjual, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tfnama, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tfkode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfaktual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(tfjual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addContainerGap())
        );

        dataTabelD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(dataTabelD);

        btnSubmit.setText("jButton2");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSubmit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfaktualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfaktualKeyReleased
        NumberFormat no = NumberFormat.getInstance();
        double nominal = Long.valueOf(tfaktual.getText().replace(",", "").replace(".", "").trim());
        no.setMaximumFractionDigits(3);
        tfaktual.setText(no.format(nominal));
    }//GEN-LAST:event_tfaktualKeyReleased

    private void tfaktualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfaktualKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfaktualKeyTyped

    private void tfjualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfjualKeyReleased
        NumberFormat no = NumberFormat.getInstance();
        double nominal = Long.valueOf(tfjual.getText().replace(",", "").replace(".", "").trim());
        no.setMaximumFractionDigits(3);
        tfjual.setText(no.format(nominal));
    }//GEN-LAST:event_tfjualKeyReleased

    private void tfjualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfjualKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfjualKeyTyped

    private void tfqtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfqtyKeyTyped
        char c = evt.getKeyChar();
        if(!((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))){
            evt.consume();
        }
    }//GEN-LAST:event_tfqtyKeyTyped

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(!tfqty.getText().isEmpty() && !tfnomor.getText().isEmpty()){
            saveSingle();
        }else{
            JOptionPane.showMessageDialog(null, "Qty tidak boleh kosong");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
//        transfer_temp_to_detail();
        if(btnSubmit.getText().equals("Save")){
            save_header();
        }
        if(btnSubmit.getText().equals("Update")){
            update_header();
        }
        this.dispose();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DetailView dt = new DetailView(null, true);
        dt.setVisible(true);
        DetailOBJ obj = dt.getData();
        if(obj != null){
            tfkode.setText(obj.getItemno());
            tfnama.setText(obj.getNama());
            tfaktual.setText(obj.getAktual());
            tfjual.setText(obj.getJual());
            //String kode = tfkode.getText();
           // search_material_price(kode);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
//        transfer_temp_to_detail();
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panelcomponentform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panelcomponentform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panelcomponentform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panelcomponentform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                panelcomponentform dialog = new panelcomponentform(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JTable dataTabelD;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbltotAktual;
    private javax.swing.JLabel lbltotJual;
    private javax.swing.JTextArea tadeskrip;
    private javax.swing.JTextField tfaktual;
    private javax.swing.JTextField tfjual;
    private javax.swing.JTextField tfkode;
    private javax.swing.JTextField tfnama;
    private javax.swing.JTextField tfnomor;
    private javax.swing.JTextField tfqty;
    // End of variables declaration//GEN-END:variables

    public void reset(){
        tfkode.setText("");
        tfnama.setText("");
        tfjual.setText("");
        tfaktual.setText("");
        tfqty.setText("");
    }
    public JTextField getTfnomor() {
        return tfnomor;
    }

    public JTextArea getTadeskrip() {
        return tadeskrip;
    }

    public JTextField getTfkode() {
        return tfkode;
    }

    public JTextField getTfnama() {
        return tfnama;
    }

    public JTextField getTfaktual() {
        return tfaktual;
    }

    public JTextField getTfjual() {
        return tfjual;
    }

    public JTextField getTfqty() {
        return tfqty;
    }

    public JButton getBtnAdd() {
        return btnAdd;
    }

    public JButton getBtnCancel() {
        return btnCancel;
    }

    public JButton getBtnSubmit() {
        return btnSubmit;
    }

    public JLabel getLbltotAktual() {
        return lbltotAktual;
    }

    public JLabel getLbltotJual() {
        return lbltotJual;
    }

    public JTable getDataTabelD() {
        return dataTabelD;
    }
    
    private void auto_refresh() {
        Timer timer = new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                createtable();
                get_total();
            }
        });

        timer.setDelay(3000); // delay for 30 seconds
        timer.start();
    }

    private void get_total(){
        String a = tfnomor.getText();
        int aktual = 0;
        int jual = 0;
        
        String sql = "select act_price totA, deal_price totJ from product_panel_detail where product_no=?";
        try {
            PreparedStatement ps = conec.prepareStatement(sql);
            ps.setString(1, a);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                aktual += rs.getInt("totA");
                jual += rs.getInt("totJ");
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
        }
        lbltotAktual.setText(String.valueOf(aktual));
        lbltotJual.setText(String.valueOf(jual));
    }
    
    public void createtable() {
        String sql = "SELECT b.product_no, b.item_no, c.name, b.qty, b.act_price, b.deal_price "
                + " FROM product_panel_detail b "
                + " left join component c on b.item_no = c.item_no "
                + " where b.product_no like ? "
                + " ORDER BY b.product_no";
        DefaultTableModel a = new DefaultTableModel();
        a.addColumn("Product No");
        a.addColumn("Material ID");
        a.addColumn("Specification");
        a.addColumn("Harga Aktual");
        a.addColumn("Harga Jual");
        a.addColumn("Jumlah"); 
        a.addColumn("Action");
        dataTabelD.setModel(a);
        try {
            PreparedStatement ps = conec.prepareStatement(sql);
            ps.setString(1, "%"+tfnomor.getText()+"%");
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                a.addRow(new Object[]{
                    rs.getString("product_no"),
                    rs.getString("item_no"),
                    rs.getString("name"),
                    rs.getString("act_price"),
                    rs.getString("deal_price"),
                    rs.getString("qty"),
                    ""
                });
                TableColumn kolom = dataTabelD.getColumn("Action");
                kolom.setCellRenderer(new ButtonsRenderer());
                kolom.setCellEditor(new ButtonsEditor(dataTabelD));
//                
//                int rows = tabelCutomer.getRowHeight();
//                tabelCutomer.setRowHeight(30);
                System.out.println("Tabel Customer Sukses");
            }
            new AturKolom(dataTabelD);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Tabel Customer Gagal");
        }
    }

    private void saveSingle() {
        String a = tfnomor.getText();
        String b = tfkode.getText();
        
        double cc = Double.valueOf(tfaktual.getText())*Double.valueOf(tfqty.getText());
        String c = String.valueOf(cc);
        
        double dd = Double.valueOf(tfjual.getText())*Double.valueOf(tfqty.getText());
        String d = String.valueOf(dd);
        
        String e = tfqty.getText();
        
        String f = tfnama.getText();
        
        String sql_cari = "select * from product_panel_detail where product_no=? and item_no=?";
        String sql_insert = "insert into product_panel_detail (product_no, item_no, act_price, deal_price, qty) values (?,?,?,?,?)";
        try {
            PreparedStatement st = conec.prepareStatement(sql_cari);
            st.setString(1, a);
            st.setString(2, b);
            ResultSet rs = st.executeQuery();
            if(rs.next()){
                int selectedOption = JOptionPane.showConfirmDialog(null, 
                                        "Rincian dengan kode material : "+b+" sudah ada, \n Updata data?", 
                                        "Warning", 
                                        JOptionPane.YES_NO_OPTION); 
                if (selectedOption == JOptionPane.YES_OPTION) { 
                      update(a, b, f, c, d, e);
                }
            }else{
                try{
                    PreparedStatement ps = conec.prepareStatement(sql_insert);
                    ps.setString(1, a);
                    ps.setString(2, b);
                    ps.setString(3, c);
                    ps.setString(4, d);
                    ps.setString(5, e);
                    ps.executeUpdate();
                    
                    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan");
                    createtable();
                    reset();
                } catch (SQLException ex) {
                    Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void update_header() {
        get_total();
        String a = tfnomor.getText();
        String b = tadeskrip.getText();
        
        String sql_cari = "select * from product_panel where product_no=?";
        String sql_update="update product_panel set description=?, act_price=?, deal_price=? where product_no=?";
        
        try {
            PreparedStatement st = conec.prepareStatement(sql_cari);
            st.setString(1, a);
            ResultSet rs = st.executeQuery();
            if(rs.next()){
                PreparedStatement ps = conec.prepareStatement(sql_update);
                ps.setString(1, b);
                ps.setString(2, lbltotAktual.getText());
                ps.setString(3, lbltotJual.getText());
                ps.setString(4, a);
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Data berhasill diubah");
                this.dispose();
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//    private void transfer_temp_to_detail() {
//        String a = tfnomor.getText();
//        
//        String sql = "insert into product_panel_detail (product_no, item_no, act_price, deal_price, qty) "
//                + " select product_no, item_no, act_price, deal_price, qty from temp_panel where product_no=?";
//        try {
//            PreparedStatement ps = conec.prepareStatement(sql);
//            ps.setString(1, a);
//            ps.executeUpdate();
//            
//            if(btnSubmit.getText().equals("Save")){
//                save_header();
//            }else{
//                update_header();
//            }
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//    }

//    private void search_material_price(String kode) {
//        String sql = "select a.item_no, b.name, a.act_price, a.deal_price "
//                + " from price a "
//                + " left join component b on a.item_no=b.item_no"
//                + " where a.item_no=?";
//        try {
//            PreparedStatement ps = conec.prepareStatement(sql);
//            ps.setString(1, kode);
//            ResultSet rs = ps.executeQuery();
//            if(rs.next()){
//                tfnama.setText(rs.getString("name"));
//                tfaktual.setText(rs.getString("act_price"));
//                tfjual.setText(rs.getString("deal_price"));
//            }else{
//                JOptionPane.showMessageDialog(null, "Harga tidak ditemukan, silahkan cek harga");
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//    }

    private void save_header() {
        get_total();
        String no = tfnomor.getText();
        String des = tadeskrip.getText();
        
        String sql_cari = "select * from product_panel where product_no=?";
        String sql_insert = "insert into product_panel (product_no, description, act_price, deal_price) values (?,?,?,?)";
        try {
            PreparedStatement ps = conec.prepareStatement(sql_cari);
            ps.setString(1, no);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                update_header();
            }else{
                try{
                    PreparedStatement st = conec.prepareStatement(sql_insert);
                    st.setString(1, no);
                    st.setString(2, des);
                    st.setString(3, lbltotAktual.getText());
                    st.setString(4, lbltotJual.getText());
                    st.executeUpdate();
                    
                    JOptionPane.showMessageDialog(null, "data berhasil disimpan");
                }catch (SQLException ex) {
                    Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    class ButtonsPanel extends JPanel{
        List <JButton> buttons = Arrays.asList(
                new JButton("", new ImageIcon(getClass().getResource("/image/rubbish7.png"))), 
                new JButton("", new ImageIcon(getClass().getResource("/image/pencil117.png")))
                );
        public ButtonsPanel(){
            super();
            setOpaque(true);
            for(JButton b : buttons){
                b.setFocusable(false);
                b.setRolloverEnabled(false);
                add(b);
            }
        }
    }
    
    class ButtonsRenderer extends ButtonsPanel implements TableCellRenderer{

        public ButtonsRenderer(){
            super();
            setName("Table.cellRenderer");
        }
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int col) {
            setBackground(isSelected?table.getSelectionBackground():table.getBackground());
            return this;
        }
    }
    
    class ButtonsEditor extends ButtonsPanel implements TableCellEditor {
        protected transient ChangeEvent changeEvent;
        private final JTable table;
        private class EditingStopHandler extends MouseAdapter implements ActionListener {
            @Override public void mousePressed(MouseEvent e) {
                Object o = e.getSource();
                if (o instanceof TableCellEditor) {
                    actionPerformed(null);
                } else if (o instanceof JButton) {
                    //DEBUG: view button click -> control key down + edit button(same cell) press -> remain selection color
                    ButtonModel m = ((JButton) e.getComponent()).getModel();
                    if (m.isPressed() && table.isRowSelected(table.getEditingRow()) && e.isControlDown()) {
                        setBackground(table.getBackground());
                    }
                }
            }
            @Override public void actionPerformed(ActionEvent e) {
                EventQueue.invokeLater(new Runnable() {
                    @Override public void run() {
                        fireEditingStopped();
                    }
                });
            }
        }
        public ButtonsEditor(JTable table) {
            super();
            this.table = table;
            buttons.get(0).setAction(new DeleteAction(table));
            buttons.get(1).setAction(new EditAction(table));

            EditingStopHandler handler = new EditingStopHandler();
            for (JButton b: buttons) {
                b.addMouseListener(handler);
                b.addActionListener(handler);
            }
            addMouseListener(handler);
        }
        @Override public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            this.setBackground(table.getSelectionBackground());
            return this;
        }
        @Override public Object getCellEditorValue() {
            return "";
        }

        //Copied from AbstractCellEditor
        //protected EventListenerList listenerList = new EventListenerList();
        //protected transient ChangeEvent changeEvent;
        @Override public boolean isCellEditable(EventObject e) {
            return true;
        }
        @Override public boolean shouldSelectCell(EventObject anEvent) {
            return true;
        }
        @Override public boolean stopCellEditing() {
            fireEditingStopped();
            return true;
        }
        @Override public void cancelCellEditing() {
            fireEditingCanceled();
        }
        @Override public void addCellEditorListener(CellEditorListener l) {
            listenerList.add(CellEditorListener.class, l);
        }
        @Override public void removeCellEditorListener(CellEditorListener l) {
            listenerList.remove(CellEditorListener.class, l);
        }
        public CellEditorListener[] getCellEditorListeners() {
            return listenerList.getListeners(CellEditorListener.class);
        }
        protected void fireEditingStopped() {
            // Guaranteed to return a non-null array
            Object[] listeners = listenerList.getListenerList();
            // Process the listeners last to first, notifying
            // those that are interested in this event
            for (int i = listeners.length - 2; i >= 0; i -= 2) {
                if (listeners[i] == CellEditorListener.class) {
                    // Lazily create the event:
                   //if (Objects.isNull(changeEvent)) {
                    if (Objects.equals(i, changeEvent)) {
                        changeEvent = new ChangeEvent(this);
                    }
                    ((CellEditorListener) listeners[i + 1]).editingStopped(changeEvent);
                }
            }
        }
        protected void fireEditingCanceled() {
            // Guaranteed to return a non-null array
            Object[] listeners = listenerList.getListenerList();
            // Process the listeners last to first, notifying
            // those that are interested in this event
            for (int i = listeners.length - 2; i >= 0; i -= 2) {
                if (listeners[i] == CellEditorListener.class) {
                    // Lazily create the event:
                    if (Objects.equals(i, changeEvent)) {
//                    if (Objects.isNull(changeEvent)) {
                        changeEvent = new ChangeEvent(this);
                    }
                    ((CellEditorListener) listeners[i + 1]).editingCanceled(changeEvent);
                }
            }
        }
    }
    
    
    class DeleteAction extends AbstractAction {
        private final JTable table;
        public DeleteAction(JTable table) {
            super("delete");
            this.table = table;
        }
        @Override 
        public void actionPerformed(ActionEvent e) {
            int baris = dataTabelD.getSelectedRow();
            int kolom = dataTabelD.getSelectedColumn();
            String data = dataTabelD.getValueAt(baris, kolom).toString();
            String id = dataTabelD.getValueAt(baris, 0).toString();
            String item = dataTabelD.getValueAt(baris, 1).toString();
            String d = dataTabelD.getValueAt(baris, 2).toString();
            
            int selectedOption = JOptionPane.showConfirmDialog(null, 
                                  "Yakin untuk menghapus data Rincian \n"+d, 
                                  "Hapus Data", 
                                  JOptionPane.YES_NO_OPTION); 
            if (selectedOption == JOptionPane.YES_OPTION) { 
                delete(id, item);
            }
        }

        private void delete(String id, String item) {
            String sql = "Delete from product_panel_detail where product_no=? and item_no=?";
            PreparedStatement ps;
            try {
                ps = conec.prepareStatement(sql);
                ps.setString(1, id);
                ps.setString(2, item);
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                createtable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(dataTabelD, "Terjadi kesalahan : "+ex);
            }
        }
    }

    class EditAction extends AbstractAction {
        private final JTable table;
        public EditAction(JTable table) {
            super("edt");
            this.table = table;
        }
        @Override 
        public void actionPerformed(ActionEvent e) {
            int row = table.convertRowIndexToModel(table.getEditingRow());
            Object o = table.getModel().getValueAt(row, 0);
            
            int baris = dataTabelD.getSelectedRow();
            int kolom = dataTabelD.getSelectedColumn();
            String data = dataTabelD.getValueAt(baris, kolom).toString();
            String no = dataTabelD.getValueAt(baris, 0).toString();
            String item = dataTabelD.getValueAt(baris, 1).toString();
            String desc = dataTabelD.getValueAt(baris, 2).toString();
            String act = dataTabelD.getValueAt(baris, 3).toString();
            String deal = dataTabelD.getValueAt(baris, 4).toString();
            String qty = dataTabelD.getValueAt(baris, 5).toString();
            
            WebTextField vno  = new com.alee.laf.text.WebTextField();
            WebTextField vitem = new com.alee.laf.text.WebTextField();
            WebTextField vdesc   = new com.alee.laf.text.WebTextField();
            WebTextField vact = new com.alee.laf.text.WebTextField();
            WebTextField vdeal     = new com.alee.laf.text.WebTextField();
            WebTextField vqty  = new com.alee.laf.text.WebTextField();
            
            vno.setFont(new java.awt.Font("Tahoma", 3, 10));
            vitem.setFont(new java.awt.Font("Tahoma", 3, 10));
            vdesc.setFont(new java.awt.Font("Tahoma", 3, 10));
            vact.setFont(new java.awt.Font("Tahoma", 3, 10));
            vdeal.setFont(new java.awt.Font("Tahoma", 3, 10));
            vqty.setFont(new java.awt.Font("Tahoma", 3, 10));
            
            double act1 = Math.round(Double.valueOf(act));
            double deal1=Math.round(Double.valueOf(deal));
            
            int aa = (int) act1;
            int bb = (int) deal1;
            int qtys = Integer.valueOf(qty);
            
            int aktuals = aa / qtys;
            int juals  = bb / qtys;
            
            
            vno.setText(no);
            vitem.setText(item);
            vdesc.setText(desc);
            vact.setText(String.valueOf(aktuals));
            vdeal.setText(String.valueOf(juals));
            vqty.setText(qty);
            
            vno.setEnabled(false);
            vitem.setEnabled(false);
            vdesc.setEnabled(false);
            vact.setEnabled(false);
            vdeal.setEnabled(false);
            
            JPanel ms = new JPanel(new GridLayout(0, 2));
            ms.add(new JLabel("Product No"));
            ms.add(vno);
            Object[] message = {
                "Product No   : ",vno,
                "Material ID  : ",vitem,
                "Description  : ",vdesc,
                "Actual Price : ",vact,
                "Deal Price   : ",vdeal,
                "Qty          : ",vqty
            };
            int option = JOptionPane.showConfirmDialog(null, message, "Enter all your values", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                String a = vno.getText();
                String b = vitem.getText();
                String c = vdesc.getText();
                double qtyE = Math.round(Double.valueOf(vqty.getText()));
                double akt = Math.round(Double.valueOf(vact.getText()));
                double jwl = Math.round(Double.valueOf(vdeal.getText()));
                int IqtyE = (int) qtyE;
                int Iakt = (int) akt;
                int Ijwl = (int) jwl;
                
                String d = String.valueOf(IqtyE * Iakt);
                String ee = String.valueOf(IqtyE * Ijwl);
                String f = vqty.getText();
                
                update(a,b,c,d,ee,f);
            }
        }
    }
    
    public void update(String no, String item, String desc, String aktual, String jual, String qty){
        
        String sql = "Update product_panel_detail set qty=?, act_price=?, deal_price=? where product_no=? and item_no=?";
        try {
            PreparedStatement ps = conec.prepareStatement(sql);
            ps.setString(1, qty);
            ps.setString(2, aktual);
            ps.setString(3, jual);
            ps.setString(4, no);
            ps.setString(5, item);
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Rincian berhasil diubah");
            reset();
        } catch (SQLException ex) {
            Logger.getLogger(panelcomponentform.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
}
