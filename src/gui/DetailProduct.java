/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import koneksi.koneksi;

/**
 *
 * @author ika
 */
public class DetailProduct extends javax.swing.JDialog {

    private ProductOBJ data;
    Connection conec;
    public DetailProduct(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        conec = new koneksi().connection();
        setLocationRelativeTo(this);
    }

    public void setData(ProductOBJ data) {
        this.data = data;
    }

    public ProductOBJ getData() {
        return data;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtheader = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tfsearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtheader.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtheader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtheader.setText("DATA ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PT. SUMBER SURYA MANDIRI");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("*) Klik untuk mengambil data");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtheader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtheader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        data = new ProductOBJ();
        TableModel a = jTable1.getModel();
        data.setKode(a.getValueAt(jTable1.getSelectedRow(), 0).toString());
        data.setNama(a.getValueAt(jTable1.getSelectedRow(), 1).toString());
        data.setAct_price(a.getValueAt(jTable1.getSelectedRow(), 2).toString());
        data.setDeal_price(a.getValueAt(jTable1.getSelectedRow(), 3).toString());
        this.dispose();
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DetailProduct dialog = new DetailProduct(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tfsearch;
    private javax.swing.JLabel txtheader;
    // End of variables declaration//GEN-END:variables

    public void tabelPanel() {
        txtheader.setText("DAFTAR LIST PRODUCT PANEL");
        String sql = "SELECT * FROM product_panel "
                + " where product_no like ? "
                + " or description like ? "
                + " ORDER BY product_no";
        DefaultTableModel a = new DefaultTableModel();
        a.addColumn("Product No");
        a.addColumn("Deskripsi");
        a.addColumn("Harga Aktual");
        a.addColumn("Harga Jual"); 
        jTable1.setModel(a);
        try {
            PreparedStatement ps = conec.prepareStatement(sql);
            ps.setString(1, "%"+tfsearch.getText()+"%");
            ps.setString(2, "%"+tfsearch.getText()+"%");
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                NumberFormat no = NumberFormat.getInstance();
                no.setMaximumFractionDigits(3);
        
                double act = Double.valueOf(rs.getString("act_price"));
                double deal= Double.valueOf(rs.getString("deal_price"));
                int vact = (int) act;
                int vdeal= (int) deal;
                String aktual, jual;
                aktual = no.format(vact);
                jual = no.format(vdeal);
                a.addRow(new Object[]{
                    rs.getString("product_no"),
                    rs.getString("description"),
                    aktual,
                    jual
                });
                System.out.println("Tabel Customer Sukses");
            }
            new AturKolom(jTable1);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Tabel Customer Gagal");
        }
    }
    
    public void tabelBox() {
        txtheader.setText("DAFTAR LIST PRODUCT BOX");
        String sql = "SELECT * FROM product_box "
                + " where product_no like ? "
                + " or description like ? "
                + " or specification like ? "
                + " ORDER BY product_no";
        DefaultTableModel dm = new DefaultTableModel();
        dm.addColumn("Kode");
        dm.addColumn("Deskripsi");
        dm.addColumn("Harga Aktual");  
        dm.addColumn("Harga Jual"); 
        jTable1.setModel(dm);
        try {
            PreparedStatement ps = conec.prepareStatement(sql);
            ps.setString(1, "%"+tfsearch.getText()+"%");
            ps.setString(2, "%"+tfsearch.getText()+"%");
            ps.setString(3, "%"+tfsearch.getText()+"%");
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                NumberFormat no = NumberFormat.getInstance();
                no.setMaximumFractionDigits(3);
        
                double act = Double.valueOf(rs.getString("act_price"));
                double deal= Double.valueOf(rs.getString("deal_price"));
                int vact = (int) act;
                int vdeal= (int) deal;
                String aktual, jual;
                aktual = no.format(vact);
                jual = no.format(vdeal);
                dm.addRow(new Object[]{
                    rs.getString("product_no"),
                    rs.getString("description"),
                    aktual,
                    jual
                });
                
                System.out.println("Tabel Box Master Sukses");
            }
            new AturKolom(jTable1);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Tabel Box Master Gagal");
        }
    }
    
    public void tabelFreeStanding() {
        txtheader.setText("DAFTAR LIST PRODUCT FREE STANDING");
        String sql = "SELECT * FROM product_standing "
                + " where product_no like ? "
                + " or description like ? "
                + " or specification like ? "
                + " ORDER BY product_no";
        DefaultTableModel dm = new DefaultTableModel();
        dm.addColumn("Kode");
        dm.addColumn("Deskripsi");
        dm.addColumn("Harga Aktual");  
        dm.addColumn("Harga Jual"); 
        jTable1.setModel(dm);
        try {
            PreparedStatement ps = conec.prepareStatement(sql);
            ps.setString(1, "%"+tfsearch.getText()+"%");
            ps.setString(2, "%"+tfsearch.getText()+"%");
            ps.setString(3, "%"+tfsearch.getText()+"%");
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                NumberFormat no = NumberFormat.getInstance();
                no.setMaximumFractionDigits(3);
        
                double act = Double.valueOf(rs.getString("act_price"));
                double deal= Double.valueOf(rs.getString("deal_price"));
                int vact = (int) act;
                int vdeal= (int) deal;
                String aktual, jual;
                aktual = no.format(vact);
                jual = no.format(vdeal);
                dm.addRow(new Object[]{
                    rs.getString("product_no"),
                    rs.getString("description"),
                    aktual,
                    jual
                });
                
                System.out.println("Tabel Box Master Sukses");
            }
            new AturKolom(jTable1);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Tabel Box Master Gagal");
        }
    }
}
