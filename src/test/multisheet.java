/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.export.JExcelApiExporterParameter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.xml.JRXmlLoader;

/**
 *
 * @author subki
 */
public class multisheet extends javax.swing.JFrame {

    Connection conec;
    public multisheet() {
        initComponents();
        conec = new koneksi().connection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jButton1)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InputStream inputStreamSubReport1 = null;
        try {
            /* Hashmap to store all Parameters required for Export Operation */
            HashMap parameters = new HashMap();
            
            /* Loading and Compiling Second Subreport */
            inputStreamSubReport1 = new FileInputStream("C:/SSM/src/print/fcmreport.jrxml");
            JasperDesign jasperDesignSubReport1 = JRXmlLoader.load(inputStreamSubReport1);
            JasperReport jasperReportSubReport1 = JasperCompileManager.compileReport(jasperDesignSubReport1);
            
            /* Loading and Compiling Second Subreport */
            InputStream inputStreamSubReport2 = new FileInputStream("C:/SSM/src/print/suboffer2.jrxml");
            JasperDesign jasperDesignSubReport2 = JRXmlLoader.load(inputStreamSubReport2);
            JasperReport jasperReportSubReport2 = JasperCompileManager.compileReport(jasperDesignSubReport1);
            
            /* Loading and Compiling Second Subreport */
            InputStream inputStreamSubReport3 = new FileInputStream("C:/SSM/src/print/componentreport.jrxml");
            JasperDesign jasperDesignSubReport3 = JRXmlLoader.load(inputStreamSubReport3);
            JasperReport jasperReportSubReport3 = JasperCompileManager.compileReport(jasperDesignSubReport1);
            
            /* Loading and Compiling Second Subreport */
            InputStream inputStreamSubReport4 = new FileInputStream("C:/SSM/src/print/boxreport.jrxml");
            JasperDesign jasperDesignSubReport4 = JRXmlLoader.load(inputStreamSubReport4);
            JasperReport jasperReportSubReport4 = JasperCompileManager.compileReport(jasperDesignSubReport1);
            
            
            /* Loading and Compiling Main Report */
            InputStream inputStream = new FileInputStream("C:/SSM/src/print/mainofferreport.jrxml");
            JasperDesign jasperDesign = JRXmlLoader.load(inputStream);
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            
            
            //List employeeList = addEmployeeInfo();
            //List departmentList = addDepartmentInfo();
            
            /* Putting the Subreport and Data into Parameters */
            //parameters.put("SUBREPORT_1", jasperReportSubReport1);
            //parameters.put("SUBREPORT_2", jasperReportSubReport2);
            //parameters.put("SUBREPORT_DATA_1", new JRBeanCollectionDataSource(employeeList));
            //parameters.put("SUBREPORT_DATA_2", new JRBeanCollectionDataSource(departmentList));
            
            /* Putting some Dummy Data for Main Report,
             * if you not pass this dummy data then result will be blank sheet.
             * and if you send multiple times then it will print same data multiple times.*/
            //ArrayList mainReportsList = new ArrayList&lt;
            //&gt;
            //();
            //mainReportsList.add("DummyValue");
            //JRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(mainReportsList);
            parameters.put("nomor", "OFFFER01");
            parameters.put("product_no", "P0032");
            parameters.put("kode", "PMA");
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conec);
            /*If you want to print the data in PDF format then you can add this line into code.
            JasperExportManager.exportReportToPdfFile(jasperPrint, "C:/test_jasper.pdf");
             */
            ByteArrayOutputStream outputByteArray = new ByteArrayOutputStream();
            OutputStream outputfile = new FileOutputStream(new File("C:/SSM/print/test_jasper.xls"));
            JRXlsExporter xlsExporter = new JRXlsExporter();
            xlsExporter.setParameter(JRXlsExporterParameter.JASPER_PRINT, jasperPrint);
            xlsExporter.setParameter(JRXlsExporterParameter.OUTPUT_STREAM, outputByteArray);
            xlsExporter.setParameter(JRXlsExporterParameter.SHEET_NAMES, new String[]{"fcm","offer letter","P0032","PMA"});
            /* This is Properties of Excel file which is used for configuration setting. */
            xlsExporter.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
            xlsExporter.setParameter(JRXlsExporterParameter.IS_REMOVE_EMPTY_SPACE_BETWEEN_ROWS, Boolean.TRUE);
            xlsExporter.setParameter(JRXlsExporterParameter.IS_DETECT_CELL_TYPE, Boolean.FALSE);
            xlsExporter.setParameter(JExcelApiExporterParameter.IGNORE_PAGE_MARGINS,Boolean.TRUE);
            xlsExporter.setParameter(JRXlsExporterParameter.IS_WHITE_PAGE_BACKGROUND, Boolean.FALSE);
            xlsExporter.exportReport();
            try {
                outputfile.write(outputByteArray.toByteArray());
            } catch (IOException ex) {
                Logger.getLogger(multisheet.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (JRException ex) {
            Logger.getLogger(multisheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(multisheet.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                inputStreamSubReport1.close();
            } catch (IOException ex) {
                Logger.getLogger(multisheet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(multisheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(multisheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(multisheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(multisheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new multisheet().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
